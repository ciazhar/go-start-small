version: '3.8'

services:
  redpanda:
    image: docker.vectorized.io/vectorized/redpanda:latest
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp 1
      - --memory 2G
      - --reserve-memory 0M
      - --node-id 0
      - --check=false
      - --kafka-addr PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      - --advertise-kafka-addr PLAINTEXT://redpanda:9092,OUTSIDE://localhost:29092
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "redpanda:9092"
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_GROUP_ID: "kafka-connect"
      CONNECT_CONFIG_STORAGE_TOPIC: "connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "connect-offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "connect-status"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
#      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=WARN"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.WorkerSinkTask=DEBUG,org.apache.kafka.connect.runtime.Worker=DEBUG"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/etc/kafka-connect/jars"
      CONNECT_DEBEZIUM_SOURCE: "true"
      CONNECT_CONNECTORS_PATH: "/usr/share/confluent-hub-components/"
      CONNECT_STORAGE_TOPIC_DIR: "/var/lib/storage"
    volumes:
      - ./connectors:/etc/kafka-connect/jars
    ports:
      - "8083:8083"
    depends_on:
      - redpanda
    networks:
      - kafka-network

  clickhouse:
    image: clickhouse/clickhouse-server
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  redpanda_data:
  clickhouse_data: