basePath: /
definitions:
  model.User:
    properties:
      age:
        type: integer
      email:
        type: string
      username:
        type: string
    type: object
host: 127.0.0.1:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /users:
    get:
      description: Retrieve all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/model.User'
            type: object
      summary: Get all users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Add a new user to the system
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      tags:
      - User
    put:
      description: Update a user's details
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Update a user
      tags:
      - User
  /users/{username}:
    delete:
      description: Delete a user by their username
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Delete a user
      tags:
      - User
    get:
      description: Get a user by their username
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
      summary: Get a user by username
      tags:
      - User
swagger: "2.0"
